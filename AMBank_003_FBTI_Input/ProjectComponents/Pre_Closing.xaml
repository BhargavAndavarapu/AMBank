<Activity mc:Ignorable="sap sap2010" x:Class="Pre_Closing" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dtConsolidatedAuditData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtConsolidatedTransactionData" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>972,2821</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Pre_Closing_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Copying all files from local drive to share drive." DisplayName="Pre_Closing" sap:VirtualizedContainerService.HintSize="959,2756" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="917,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Pre-Closing Xaml Started</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Sequence (Audit Files)" sap:VirtualizedContainerService.HintSize="917,1764" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_dtConsolidatedAuditData IsNot Nothing and in_dtConsolidatedAuditData.RowCount &gt; 0]" DisplayName="If(Audit is not nothing)" sap:VirtualizedContainerService.HintSize="875,1475" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Audit Files to Share Drive Audit Files" DisplayName="Sequence(Audit Files)" sap:VirtualizedContainerService.HintSize="839,1288" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[File.Exists(in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedAuditFileName&quot;).ToString)]" DisplayName="If(Checking audit file exits or not in Local Drive Audit)" sap:VirtualizedContainerService.HintSize="797,669" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,511" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Audit file exists in Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedAuditFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:AppendRange DataTable="[in_dtConsolidatedAuditData]" DisplayName="Append Range Workbook" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="[in_Config(&quot;ConsolidatedAuditFileSheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedAuditFileName&quot;).ToString]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["DataTable data appended to Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedAuditFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,511" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Audit file not exists in Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedAuditFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[in_dtConsolidatedAuditData]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[in_Config(&quot;ConsolidatedAuditFileSheetName&quot;).ToString.Trim]" WorkbookPath="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString + &quot;\&quot; + in_Config(&quot;ConsolidatedAuditFileName&quot;).ToString]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Excel created and datatable writted into Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString + "\" + in_Config("ConsolidatedAuditFileName").ToString + ")."]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying local drive audit file(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedAuditFileName").ToString + ") into share drive audit folder(Path: " + in_Config("ShareDriveAuditFilesFolderPath").ToString +"\"+ in_Config("CurrentYear").ToString +"\"+ in_Config("CurrentMonth").ToString + "\)"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;ShareDriveAuditFilesFolderPath&quot;).ToString +&quot;\&quot;+ in_Config(&quot;CurrentYear&quot;).ToString + &quot;\&quot;+ in_Config(&quot;CurrentMonth&quot;).ToString + &quot;\&quot; + in_Config(&quot;ConsolidatedAuditFileName&quot;).ToString]" DisplayName="Copy File(Audit File from local drive to share drive)" sap:VirtualizedContainerService.HintSize="797,152" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedAuditFileName&quot;).ToString]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied local drive audit file(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedAuditFileName").ToString + ") into share drive audit folder(Path: " + in_Config("ShareDriveAuditFilesFolderPath").ToString +"\"+ in_Config("CurrentYear").ToString +"\"+ in_Config("CurrentMonth").ToString + "\)"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[in_dtConsolidatedTransactionData IsNot Nothing and in_dtConsolidatedTransactionData.RowCount &gt; 0]" DisplayName="If(Transaction is not nothing)" sap:VirtualizedContainerService.HintSize="875,51" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Audit Files to Share Drive Audit Files" DisplayName="Sequence(Transaction Files)" sap:VirtualizedContainerService.HintSize="839,1288" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[File.Exists(in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedTransactionFileName&quot;).ToString)]" DisplayName="If(Checking transaction file exits or not in Local Drive Audit)" sap:VirtualizedContainerService.HintSize="797,669" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,511" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Transaction file exists in Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:AppendRange DataTable="[in_dtConsolidatedTransactionData]" DisplayName="Append Range Workbook" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_2" SheetName="[in_Config(&quot;ConsolidatedTransactionFileSheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedTransactionFileName&quot;).ToString]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["DataTable data appended to Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,511" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Transaction file not exists in Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ")"]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[in_dtConsolidatedTransactionData]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[in_Config(&quot;ConsolidatedTransactionFileSheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString + &quot;\&quot; + in_Config(&quot;ConsolidatedTransactionFileName&quot;).ToString]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Excel created and datatable writted into Local Drive Audit File(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ")."]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying local drive audit file(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ") into share drive audit folder(Path: " + in_Config("ShareDriveAuditFilesFolderPath").ToString +"\"+ in_Config("CurrentYear").ToString +"\"+ in_Config("CurrentMonth").ToString + "\)"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;ShareDriveAuditFilesFolderPath&quot;).ToString +&quot;\&quot;+ in_Config(&quot;CurrentYear&quot;).ToString + &quot;\&quot;+ in_Config(&quot;CurrentMonth&quot;).ToString + &quot;\&quot; + in_Config(&quot;ConsolidatedTransactionFileName&quot;).ToString]" DisplayName="Copy File(Audit File from local drive to share drive)" sap:VirtualizedContainerService.HintSize="797,152" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[in_Config(&quot;LocalDriveAuditFilesFolderPath&quot;).ToString  + &quot;\&quot; + in_Config(&quot;ConsolidatedTransactionFileName&quot;).ToString]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied local drive audit file(Path: " + in_Config("LocalDriveAuditFilesFolderPath").ToString  + "\" + in_Config("ConsolidatedTransactionFileName").ToString + ") into share drive audit folder(Path: " + in_Config("ShareDriveAuditFilesFolderPath").ToString +"\"+ in_Config("CurrentYear").ToString +"\"+ in_Config("CurrentMonth").ToString + "\)"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Sequence DisplayName="Sequence(Updating Audit assets)" sap:VirtualizedContainerService.HintSize="875,66" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;AuditFileSerialNumberAssetName&quot;).ToString]" DisplayName="Set Asset" FolderPath="[in_Config(&quot;OrchestratorAssetFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[in_Config(&quot;AuditFileSerialNumber&quot;).ToString]" />
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Orchestrator asset: " + in_Config("AuditFileSerialNumberAssetName").ToString + " updated with value: " +in_Config("AuditFileSerialNumber").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;TransactionFileSerialNumberAssetName&quot;).ToString]" DisplayName="Set Asset" FolderPath="[in_Config(&quot;OrchestratorAssetFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="SetAsset_2" Value="[in_Config(&quot;TransactionFileSerialNumber&quot;).ToString]" />
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Orchestrator asset: " + in_Config("TransactionFileSerialNumberAssetName").ToString + " updated with value: " +in_Config("TransactionFileSerialNumber").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Inputs to Share Drive Inputs" DisplayName="Sequence(Inputs)" sap:VirtualizedContainerService.HintSize="917,108" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying Local Drive Inputs(Path: '" + in_Config("LocalDriveInputsFolderPath").ToString + "\') into share drive inputs(Path: '" + in_Config("ShareDriveArchiveInputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" + in_Config("CurrentTime").ToString +"\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <InvokeMethod DisplayName="Invoke Method(Copy)" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
        <InArgument x:TypeArguments="x:String">[in_Config("LocalDriveInputsFolderPath").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("ShareDriveArchiveInputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" +  in_Config("CurrentTime").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </InvokeMethod>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied Local Drive Inputs(Path: '" + in_Config("LocalDriveInputsFolderPath").ToString + "\') into share drive inputs(Path: '" + in_Config("ShareDriveArchiveInputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" + in_Config("CurrentTime").ToString +"\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="917,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="418,654" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Logs to Share Drive Logs" DisplayName="Sequence(Logs)" sap:VirtualizedContainerService.HintSize="376,562" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying Local Drive Logs(Path: '" + in_Config("LocalDriveLogsFolderPath").ToString + "\') into share drive Logs(Path: '" + in_Config("ShareDriveLogsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\')"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <InvokeMethod DisplayName="Invoke Method(Copy)" sap:VirtualizedContainerService.HintSize="334,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
              <InArgument x:TypeArguments="x:String">[in_Config("LocalDriveLogsFolderPath").ToString + "\"]</InArgument>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("ShareDriveLogsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\"]</InArgument>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </InvokeMethod>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied Local Drive Logs(Path: '" + in_Config("LocalDriveLogsFolderPath").ToString + "\') into share drive Logs(Path: '" + in_Config("ShareDriveLogsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\')"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Outputs to Share Drive Outputs" DisplayName="Sequence(Outputs)" sap:VirtualizedContainerService.HintSize="917,108" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying Local Drive Outputs(Path: '" + in_Config("LocalDriveOutputsFolderPath").ToString + "\') into share drive outputs(Path: '" + in_Config("ShareDriveArchiveOutputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" + in_Config("CurrentTime").ToString +"\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <InvokeMethod DisplayName="Invoke Method(Copy)" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
        <InArgument x:TypeArguments="x:String">[in_Config("LocalDriveOutputsFolderPath").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("ShareDriveArchiveOutputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" +  in_Config("CurrentTime").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </InvokeMethod>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied Local Drive Outputs(Path: '" + in_Config("LocalDriveOutputsFolderPath").ToString + "\') into share drive outputs(Path: '" + in_Config("ShareDriveArchiveOutputsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\" + in_Config("CurrentTime").ToString +"\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Copying Local Drive Exception Screenshots to Share Drive Exception Screenshots" DisplayName="Sequence(Exception Screenshots)" sap:VirtualizedContainerService.HintSize="917,138" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copying Local Drive Exception Screenshots(Path: '" + in_Config("LocalDriveExceptionScreenshotsFolderPath").ToString + "\') into share drive exception screenshots(Path: '" + in_Config("ShareDriveExceptionScreenshotsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <InvokeMethod DisplayName="Invoke Method(Copy)" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
        <InArgument x:TypeArguments="x:String">[in_Config("LocalDriveExceptionScreenshotsFolderPath").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("ShareDriveExceptionScreenshotsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\"]</InArgument>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </InvokeMethod>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Copied Local Drive Exception Screenshots(Path: '" + in_Config("LocalDriveExceptionScreenshotsFolderPath").ToString + "\') into share drive exception screenshots(Path: '" + in_Config("ShareDriveExceptionScreenshotsFolderPath").ToString + "\" + in_Config("CurrentYear").ToString + "\"  + in_Config("CurrentMonth").ToString + "\"  + in_Config("CurrentDate").ToString + "\')"]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="917,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Pre-Closing Xaml Ended</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>