<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_StrFBTIUserID" Type="InArgument(x:String)" />
    <x:Property Name="in_SecStrFBTIPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="io_dtAudit" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="out_blnDatesExist" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1042,1833</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="1052,1768" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strShareDriveInputFilePath" />
      <Variable x:TypeArguments="x:String" Name="strLocalDriveInputFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputData" />
      <Variable x:TypeArguments="x:Boolean" Name="blnInputDataExists" />
      <Variable x:TypeArguments="x:Boolean" Name="blnAPIStatus" />
      <Variable x:TypeArguments="x:Boolean" Name="blnRowsExits" />
      <Variable x:TypeArguments="x:Boolean" Name="blnHeadersExists" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Flowchart(Initialize All Applications)" sap:VirtualizedContainerService.HintSize="1010,1645" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">350,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,75</av:Size>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <av:PointCollection x:Key="ConnectorLocation">380,77.5 380,127.5</av:PointCollection>
          <x:Double x:Key="Height">1578.5</x:Double>
          <x:Double x:Key="Width">976.5</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID18</x:Reference>
      </Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">280,127.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,178.5 380,228.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">InitAllApplications started</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">280,228.5</av:Point>
                <av:Size x:Key="ShapeSize">200,97</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">380,325.5 380,368.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Reading Audit file" DisplayName="Sequence(Reading Audit File)" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="Sequence_43">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Reading audit file(Path: " + in_Config("LocalDriveTemplatesFolderPath").ToString + "\" + in_Config("AuditFileTemplateName").ToString + ")"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[io_dtAudit]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[in_Config(&quot;ConsolidatedAuditFileSheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;LocalDriveTemplatesFolderPath&quot;).ToString + &quot;\&quot; + in_Config(&quot;AuditFileTemplateName&quot;).ToString]" />
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Read succesfully</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">280,368.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">380,419.5 380,449.5 380.641666666667,449.5 380.641666666667,479.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Checking Input file exists or not in Share Drive Inputs(Path: " + in_Config("ShareDriveInputsFolderPath").ToString + ")."]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID3" Condition="[Directory.GetFiles(in_Config(&quot;ShareDriveInputsFolderPath&quot;).ToString,&quot;*.xlsx&quot;).Count &gt; 0]" DisplayName="Checking Share Drive Inputs Exits or Not" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <av:Point x:Key="ShapeLocation">300.641666666667,479.5</av:Point>
                        <av:Size x:Key="ShapeSize">160,87</av:Size>
                        <av:PointCollection x:Key="TrueConnector">300.641666666667,523 230.641666666667,523</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">460.641666666667,523 529.641666666667,523</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">30.641666666667,461.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,123</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">130.641666666667,584.5 130.641666666667,614.5 379.5,614.5 379.5,646.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap2010:Annotation.AnnotationText="Moving Input File From Share Drive Inputs to Local Drive Inputs" DisplayName="Sequence(Moving Input File From Share Drive Inputs to Local Drive Inputs)" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Input file exists in Share Drive Inputs</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strShareDriveInputFilePath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_Config("ShareDriveInputsFolderPath").ToString, "*.xlsx")(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Share Drive Input File Path is: " + strShareDriveInputFilePath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strLocalDriveInputFilePath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[in_Config("LocalDriveInputsFolderPath").ToString + "\" + Path.GetFileName(strShareDriveInputFilePath)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[strLocalDriveInputFilePath]" DisplayName="Move File(Share Drive Inputs to Local Drive Inputs)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[strShareDriveInputFilePath]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MoveFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Share drive input file(Path: " + strShareDriveInputFilePath + ") moved into " + in_Config("LocalDriveInputsFolderPath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowDecision x:Name="__ReferenceID6" Condition="[File.Exists(strLocalDriveInputFilePath)]" DisplayName="Checking File is Move or Not" sap:VirtualizedContainerService.HintSize="158,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <av:Point x:Key="ShapeLocation">300.5,646.5</av:Point>
                                <av:Size x:Key="ShapeSize">158,87</av:Size>
                                <av:PointCollection x:Key="FalseConnector">458.5,690 529.5,690</av:PointCollection>
                                <av:PointCollection x:Key="TrueConnector">300.5,690 230,690</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <FlowDecision.True>
                              <FlowStep x:Name="__ReferenceID10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">30,636</av:Point>
                                    <av:Size x:Key="ShapeSize">200,108</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">130,744 130,774 379,774 379,806.5</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap2010:Annotation.AnnotationText="Reading input excel file into data table" DisplayName="Sequence(Reading Input Excel File)" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="431,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Reading input excel file</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:ReadRange AddHeaders="True" DataTable="[dtInputData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="431,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="A1" SheetName="[in_Config(&quot;CommonSheetName&quot;).ToString]" WorkbookPath="[strLocalDriveInputFilePath]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="431,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Input file read successfully and its row count is: " + dtInputData.RowCount.ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[blnRowsExits]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">[dtInputData.RowCount &gt; 0]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[blnHeadersExists]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Boolean">[dtInputData.Columns.Cast(Of DataColumn).Select(Function(m) m.ColumnName.ToString.Trim.ToLower).ToList().Contains("date")]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <If Condition="[dtInputData.Columns.Cast(Of DataColumn).Select(Function(m) m.ColumnName.ToString.Trim.ToLower).ToList().Contains(&quot;date&quot;)]" DisplayName="If(Checking Row Count and Column Name)" sap:VirtualizedContainerService.HintSize="431,51" sap2010:WorkflowViewState.IdRef="If_5">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[blnInputDataExists]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Input file contains data and column name 'date'(Lower) exists</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,996" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[blnInputDataExists]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">[if(blnRowsExits, "Input file contains data.","Input file not contains data.")]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">[If(blnHeadersExists,"Date column exists in the input file","Date Column not exits in the input file")]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <TryCatch DisplayName="Try Catch(Business Exception Email)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Sequence sap:VirtualizedContainerService.HintSize="407,383" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="365,139" sap2010:WorkflowViewState.IdRef="AddLogFields_9">
                                                <ui:AddLogFields.Fields>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">SendEmailNotification</InArgument>
                                                </ui:AddLogFields.Fields>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:AddLogFields>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\SendEmailNotification.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="365,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" UnSafe="False" WorkflowFileName="ProjectComponents\SendEmailNotification.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[New BusinessRuleException(if(blnRowsExits, "Input file contains data.","Input file not contains data.") + " " + If(blnHeadersExists,"","Date Column not exits in the input file"))]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_MailType">[in_Config("BEMailType").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException" />
                                                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem" />
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_StrMailTemplateFile">[in_Config("LocalDriveTemplatesFolderPath").ToString + "\" + in_Config("BUBodyTemplateFile").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="s:String[]" x:Key="in_arrStrFilePaths" />
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="411,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_13">
                                                    <ui:AddLogFields.Fields>
                                                      <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                                    </ui:AddLogFields.Fields>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:AddLogFields>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while sending business exception mail. Exception Message: " + exception.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_14">
                                          <ui:AddLogFields.Fields>
                                            <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                          </ui:AddLogFields.Fields>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:AddLogFields>
                                        <TryCatch DisplayName="Try Catch (Calling API Business Exception)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Sequence sap:VirtualizedContainerService.HintSize="387,474" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:Boolean" Name="blnAPIStatus" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="345,139" sap2010:WorkflowViewState.IdRef="AddLogFields_11">
                                                <ui:AddLogFields.Fields>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                                </ui:AddLogFields.Fields>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:AddLogFields>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="345,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}",if(blnRowsExits, "Input file contains data.","Input file not contains data.") + " " + If(blnHeadersExists,"","Date Column not exits in the input file")).Replace("{BotStatus}","Failed").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="345,51" sap2010:WorkflowViewState.IdRef="If_6">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Business Exception data sent to API Succesfully</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </If.Then>
                                                <If.Else>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent business exception.</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_15">
                                                    <ui:AddLogFields.Fields>
                                                      <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                                    </ui:AddLogFields.Fields>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:AddLogFields>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_91" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at InitAllApplications. Exception Message: " + exception.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_16">
                                          <ui:AddLogFields.Fields>
                                            <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                          </ui:AddLogFields.Fields>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:AddLogFields>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID4" Condition="[blnInputDataExists]" DisplayName="Checking Input Data " sap:VirtualizedContainerService.HintSize="117,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <av:Point x:Key="ShapeLocation">320.5,806.5</av:Point>
                                        <av:Size x:Key="ShapeSize">117,87</av:Size>
                                        <av:PointCollection x:Key="FalseConnector">437.5,850 590,850 590,1106.5</av:PointCollection>
                                        <av:PointCollection x:Key="TrueConnector">320.5,850 230.5,850</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID12">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">30.5,796</av:Point>
                                            <av:Size x:Key="ShapeSize">200,108</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">130.5,904 130.5,954</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap2010:Annotation.AnnotationText="Input file dates adding to queue" DisplayName="Sequence(Input file dates adding to queue)" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Adding config mentioned dates to queue: " + in_Config("MastersDatetoExtract").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtInputData]" DisplayName="For Each Row in Data Table(Conventional Data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="eachRow" />
                                                </ActivityAction.Argument>
                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="877,743" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch.Try>
                                                    <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="839,516" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If Condition="[Not String.IsNullOrWhiteSpace(eachRow(1).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="797,424" sap2010:WorkflowViewState.IdRef="If_7">
                                                        <If.Then>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_7" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]">
                                                              <ui:AddQueueItem.ItemInformation>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Date">[CDate(eachRow(1).ToString.Trim).ToString(in_Config("MastersDateFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Entity">[in_Config("FBTIConventionalEntityName").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="ProductType">[in_Config("FBTIConventionalProductTypes").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="EventStatus">[in_Config("FBTIEventStatus").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Product">[in_Config("FBTIProduct").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Event">[in_Config("FBTIEvent").ToString.Trim]</InArgument>
                                                              </ui:AddQueueItem.ItemInformation>
                                                            </ui:AddQueueItem>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Date: " + eachRow(1).ToString + ", Entity Type: " + in_Config("FBTIConventionalEntityName").ToString + ", Product Type: " + in_Config("FBTIConventionalProductTypes").ToString + " are added to queue."]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Date field is empty</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="843,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception Occured while uploading following " +"Date: " + eachRow(1).ToString + ", Entity Type: " + in_Config("FBTIConventionalEntityName").ToString + ", Product Type: " + in_Config("FBTIConventionalProductTypes").ToString +" data to queue. Exception Message: " + exception.Message + " at " + exception.Source]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ForEachRow>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[in_Config("AuditFileSerialNumber")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[(CInt(in_Config("AuditFileSerialNumber").ToString)  + 1).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_Config(&quot;AuditFileSerialNumber&quot;).ToString, in_Config(&quot;MachineName&quot;).ToString, in_Config(&quot;CurrentDate&quot;).ToString + &quot; &quot; + in_Config(&quot;CurrentTime&quot;).ToString, Now.ToString(in_Config(&quot;CurrentDateFormat&quot;).ToString) + &quot; &quot; +Now.ToString(in_Config(&quot;CurrentTimeFormat&quot;).ToString), in_Config(&quot;AuditComment1&quot;).ToString.Replace(&quot;{Entity}&quot;, in_Config(&quot;FBTIConventionalEntityName&quot;).ToString.Trim).Replace(&quot;{ProductTypes}&quot;, in_Config(&quot;FBTIConventionalProductTypes&quot;).ToString)}]" DataTable="[io_dtAudit]" DisplayName="Add Data Row(Added Convetional data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddDataRow>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Convetional data added to audit data table</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                                            <ui:AddLogFields.Fields>
                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                            </ui:AddLogFields.Fields>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddLogFields>
                                          <TryCatch DisplayName="Try Catch (Calling API Conventional InitAllApplications)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence sap:VirtualizedContainerService.HintSize="387,295" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="345,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}",in_Config("AuditComment1").ToString.Replace("{Entity}", in_Config("FBTIConventionalEntityName").ToString.Trim).Replace("{ProductTypes}", in_Config("FBTIConventionalProductTypes").ToString)).Replace("{BotStatus}","").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="345,51" sap2010:WorkflowViewState.IdRef="If_3">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Convetional data sent to API Succesfully</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent convetnional data.</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at initiallapplications. Exception Message: " + exception.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
                                            <ui:AddLogFields.Fields>
                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                            </ui:AddLogFields.Fields>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddLogFields>
                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtInputData]" DisplayName="For Each Row in Data Table(Islamic Data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="eachRow" />
                                                </ActivityAction.Argument>
                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="877,743" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch.Try>
                                                    <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="839,516" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If Condition="[Not String.IsNullOrWhiteSpace(eachRow(1).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="797,424" sap2010:WorkflowViewState.IdRef="If_8">
                                                        <If.Then>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_8" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]">
                                                              <ui:AddQueueItem.ItemInformation>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Date">[CDate(eachRow(1).ToString.Trim).ToString(in_Config("MastersDateFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Entity">[in_Config("FBTIIslamicEntityName").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="ProductType">[in_Config("FBTIIslamicProductTypes").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="EventStatus">[in_Config("FBTIEventStatus").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Product">[in_Config("FBTIProduct").ToString.Trim]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Event">[in_Config("FBTIEvent").ToString.Trim]</InArgument>
                                                              </ui:AddQueueItem.ItemInformation>
                                                            </ui:AddQueueItem>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Date: " + eachRow(1).ToString + ", Entity Type: " + in_Config("FBTIIslamicEntityName").ToString + ", Product Type: " + in_Config("FBTIIslamicProductTypes").ToString + " are added to queue."]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Date field is empty</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="843,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Exception Occured while uploading following " +"Date: " + eachRow(1).ToString + ", Entity Type: " + in_Config("FBTIIslamicEntityName").ToString + ", Product Type: " + in_Config("FBTIIslamicProductTypes").ToString + "  data to queue. Exception Message: " + exception.Message + " at " + exception.Source]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ForEachRow>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[in_Config("AuditFileSerialNumber")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[(CInt(in_Config("AuditFileSerialNumber").ToString)  + 1).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_Config(&quot;AuditFileSerialNumber&quot;).ToString, in_Config(&quot;MachineName&quot;).ToString, in_Config(&quot;CurrentDate&quot;).ToString + &quot; &quot; + in_Config(&quot;CurrentTime&quot;).ToString, Now.ToString(in_Config(&quot;CurrentDateFormat&quot;).ToString) + &quot; &quot; +Now.ToString(in_Config(&quot;CurrentTimeFormat&quot;).ToString), in_Config(&quot;AuditComment1&quot;).ToString.Replace(&quot;{Entity}&quot;, in_Config(&quot;FBTIIslamicEntityName&quot;).ToString.Trim).Replace(&quot;{ProductTypes}&quot;, in_Config(&quot;FBTIIslamicProductTypes&quot;).ToString)}]" DataTable="[io_dtAudit]" DisplayName="Add Data Row(Added Islamic data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AddDataRow_4">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddDataRow>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Islamic data added to audit data table</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_7">
                                            <ui:AddLogFields.Fields>
                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                            </ui:AddLogFields.Fields>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddLogFields>
                                          <TryCatch DisplayName="Try Catch (Calling API Islamic InitAllApplications)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence sap:VirtualizedContainerService.HintSize="755,514" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="713,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_82" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}",in_Config("AuditComment1").ToString.Replace("{Entity}", in_Config("FBTIIslamicEntityName").ToString.Trim).Replace("{ProductTypes}", in_Config("FBTIIslamicProductTypes").ToString)).Replace("{BotStatus}","").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="713,270" sap2010:WorkflowViewState.IdRef="If_4">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_83" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Islamic data sent to API Succesfully</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent islamic data.</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="759,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at initiallapplications. Exception Message: " + exception.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_8">
                                            <ui:AddLogFields.Fields>
                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                            </ui:AddLogFields.Fields>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddLogFields>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Added input mentioned dates to queue</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[out_blnDatesExist]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="Equals" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Result="[queueItems]" Top="2" />
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowDecision x:Name="__ReferenceID14" Condition="[queueItems.Count &gt; 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <av:Point x:Key="ShapeLocation">91,954</av:Point>
                                                <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                <av:PointCollection x:Key="FalseConnector">170,997.5 280,997.5</av:PointCollection>
                                                <av:PointCollection x:Key="TrueConnector">91,997.5 80,997.5 80,1497.5 500,1497.5 500,1527.5</av:PointCollection>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <FlowDecision.True>
                                              <FlowStep x:Name="__ReferenceID0">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <av:Point x:Key="ShapeLocation">400,1527.5</av:Point>
                                                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                                                    <av:PointCollection x:Key="ConnectorLocation">360,188.5 360,238.5</av:PointCollection>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">InitAllApplications ended</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </FlowStep>
                                            </FlowDecision.True>
                                            <FlowDecision.False>
                                              <FlowStep x:Name="__ReferenceID15">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <av:Point x:Key="ShapeLocation">280,971.5</av:Point>
                                                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                                                    <av:PointCollection x:Key="ConnectorLocation">480,997.5 590,997.5 590,1106.5</av:PointCollection>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["No data in the Queue.(Orchestrator Folder: "+ in_Config("OrchestratorQueueFolder").ToString +"\Orchestrator Queue:" + in_Config("OrchestratorQueueName").ToString + ")"]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <FlowStep.Next>
                                                  <FlowDecision x:Name="__ReferenceID2" Condition="[in_Config(&quot;ShouldExtractMastersDate&quot;).ToString.ToUpper.Equals(&quot;YES&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <av:Point x:Key="ShapeLocation">550.5,1106.5</av:Point>
                                                        <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                        <av:PointCollection x:Key="TrueConnector">550.5,1150 479.5,1150</av:PointCollection>
                                                        <av:PointCollection x:Key="FalseConnector">629.5,1150 810,1150 810,1284.5</av:PointCollection>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <FlowDecision.True>
                                                      <FlowStep x:Name="__ReferenceID11">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <av:Point x:Key="ShapeLocation">279.5,1096</av:Point>
                                                            <av:Size x:Key="ShapeSize">200,108</av:Size>
                                                            <av:PointCollection x:Key="ConnectorLocation">379.5,1204 379.5,1234 590.5,1234 590.5,1274</av:PointCollection>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Sequence sap2010:Annotation.AnnotationText="Config Mentioned dates adding to queue" DisplayName="Sequence(Config dates adding to queue)" sap:VirtualizedContainerService.HintSize="376,2272" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Adding config mentioned dates to queue: " + in_Config("MastersDatetoExtract").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each(Conventional Data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Split(in_Config(&quot;MastersDatetoExtract&quot;).ToString,&quot;,&quot;)]">
                                                            <ui:ForEach.Body>
                                                              <ActivityAction x:TypeArguments="x:String">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="eachDate" />
                                                                </ActivityAction.Argument>
                                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,680" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                                                  <TryCatch.Try>
                                                                    <If Condition="[Not String.IsNullOrWhiteSpace(eachDate.ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_10">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If.Then>
                                                                        <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_3" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]">
                                                                            <ui:AddQueueItem.ItemInformation>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Date">[eachDate.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Entity">[in_Config("FBTIConventionalEntityName").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="ProductType">[in_Config("FBTIConventionalProductTypes").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="EventStatus">[in_Config("FBTIEventStatus").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Product">[in_Config("FBTIProduct").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Event">[in_Config("FBTIEvent").ToString.Trim]</InArgument>
                                                                            </ui:AddQueueItem.ItemInformation>
                                                                          </ui:AddQueueItem>
                                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Date: " + eachDate + ", Entity Type: " + in_Config("FBTIConventionalEntityName").ToString + ", Product Types: " + in_Config("FBTIConventionalProductTypes").ToString + " are added to queue."]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </TryCatch.Try>
                                                                  <TryCatch.Catches>
                                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                        </ActivityAction.Argument>
                                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception Occured while uploading following " + "Date: " + eachDate + ", Entity Type: " + in_Config("FBTIConventionalEntityName").ToString + ", Product Types: " + in_Config("FBTIConventionalProductTypes").ToString + " data to queue. Exception Message: " + exception.Message + " at " + exception.Source]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                        </ui:InvokeWorkflowFile>
                                                                      </ActivityAction>
                                                                    </Catch>
                                                                  </TryCatch.Catches>
                                                                </TryCatch>
                                                              </ActivityAction>
                                                            </ui:ForEach.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEach>
                                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[in_Config("AuditFileSerialNumber")]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[(CInt(in_Config("AuditFileSerialNumber").ToString)  + 1).ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_Config(&quot;AuditFileSerialNumber&quot;).ToString, in_Config(&quot;MachineName&quot;).ToString, in_Config(&quot;CurrentDate&quot;).ToString + &quot; &quot; + in_Config(&quot;CurrentTime&quot;).ToString, Now.ToString(in_Config(&quot;CurrentDateFormat&quot;).ToString) + &quot; &quot; +Now.ToString(in_Config(&quot;CurrentTimeFormat&quot;).ToString), in_Config(&quot;AuditComment1&quot;).ToString.Replace(&quot;{Entity}&quot;, in_Config(&quot;FBTIConventionalEntityName&quot;).ToString.Trim).Replace(&quot;{ProductTypes}&quot;, in_Config(&quot;FBTIConventionalProductTypes&quot;).ToString)}]" DataTable="[io_dtAudit]" DisplayName="Add Data Row(Added Convetional data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddDataRow>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Convetional data added to audit data table</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                                                            <ui:AddLogFields.Fields>
                                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                                            </ui:AddLogFields.Fields>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddLogFields>
                                                          <TryCatch DisplayName="Try Catch (Calling API Conventional InitAllApplications)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="387,295" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="345,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}",in_Config("AuditComment1").ToString.Replace("{Entity}", in_Config("FBTIConventionalEntityName").ToString.Trim).Replace("{ProductTypes}", in_Config("FBTIConventionalProductTypes").ToString)).Replace("{BotStatus}","").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                                <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="345,51" sap2010:WorkflowViewState.IdRef="If_1">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Convetional data sent to API Succesfully</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_73" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent convetnional data.</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at initiallapplications. Exception Message: " + exception.Message]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                                                            <ui:AddLogFields.Fields>
                                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                                            </ui:AddLogFields.Fields>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddLogFields>
                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each(Islamic Data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Split(in_Config(&quot;MastersDatetoExtract&quot;).ToString,&quot;,&quot;)]">
                                                            <ui:ForEach.Body>
                                                              <ActivityAction x:TypeArguments="x:String">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="eachDate" />
                                                                </ActivityAction.Argument>
                                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,680" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                                                  <TryCatch.Try>
                                                                    <If Condition="[Not String.IsNullOrWhiteSpace(eachDate.ToString.Trim)]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_11">
                                                                      <If.Then>
                                                                        <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_4" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]">
                                                                            <ui:AddQueueItem.ItemInformation>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Date">[eachDate.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Entity">[in_Config("FBTIIslamicEntityName").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="ProductType">[in_Config("FBTIIslamicProductTypes").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="EventStatus">[in_Config("FBTIEventStatus").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Product">[in_Config("FBTIProduct").ToString.Trim]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Event">[in_Config("FBTIEvent").ToString.Trim]</InArgument>
                                                                            </ui:AddQueueItem.ItemInformation>
                                                                          </ui:AddQueueItem>
                                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Date: " + eachDate + ", Entity Type: " + in_Config("FBTIIslamicEntityName").ToString + ", Product Types: " + in_Config("FBTIIslamicProductTypes").ToString + " are added to queue."]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </TryCatch.Try>
                                                                  <TryCatch.Catches>
                                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                        </ActivityAction.Argument>
                                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception Occured while uploading following " + "Date: " + eachDate + ", Entity Type: " + in_Config("FBTIIslamicEntityName").ToString + ", Product Types: " + in_Config("FBTIIslamicProductTypes").ToString + " data to queue. Exception Message: " + exception.Message + " at " + exception.Source]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                        </ui:InvokeWorkflowFile>
                                                                      </ActivityAction>
                                                                    </Catch>
                                                                  </TryCatch.Catches>
                                                                </TryCatch>
                                                              </ActivityAction>
                                                            </ui:ForEach.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEach>
                                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[in_Config("AuditFileSerialNumber")]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[(CInt(in_Config("AuditFileSerialNumber").ToString)  + 1).ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_Config(&quot;AuditFileSerialNumber&quot;).ToString, in_Config(&quot;MachineName&quot;).ToString, in_Config(&quot;CurrentDate&quot;).ToString + &quot; &quot; + in_Config(&quot;CurrentTime&quot;).ToString, Now.ToString(in_Config(&quot;CurrentDateFormat&quot;).ToString) + &quot; &quot; +Now.ToString(in_Config(&quot;CurrentTimeFormat&quot;).ToString), in_Config(&quot;AuditComment1&quot;).ToString.Replace(&quot;{Entity}&quot;, in_Config(&quot;FBTIIslamicEntityName&quot;).ToString.Trim).Replace(&quot;{ProductTypes}&quot;, in_Config(&quot;FBTIIslamicProductTypes&quot;).ToString)}]" DataTable="[io_dtAudit]" DisplayName="Add Data Row(Added Islamic data)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddDataRow>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Islamic data added to audit data table</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
                                                            <ui:AddLogFields.Fields>
                                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                                            </ui:AddLogFields.Fields>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddLogFields>
                                                          <TryCatch DisplayName="Try Catch (Calling API Islamic InitAllApplications)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="755,514" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="713,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_74" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}",in_Config("AuditComment1").ToString.Replace("{Entity}", in_Config("FBTIIslamicEntityName").ToString.Trim).Replace("{ProductTypes}", in_Config("FBTIIslamicProductTypes").ToString)).Replace("{BotStatus}","").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                                <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="713,270" sap2010:WorkflowViewState.IdRef="If_2">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Islamic data sent to API Succesfully</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_76" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent islamic data.</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="759,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at initiallapplications. Exception Message: " + exception.Message]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="334,139" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
                                                            <ui:AddLogFields.Fields>
                                                              <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                                            </ui:AddLogFields.Fields>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:AddLogFields>
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Added config mentioned dates to queue: " + in_Config("MastersDatetoExtract").ToString]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="Equals" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Result="[queueItems]" Top="2" />
                                                        </Sequence>
                                                        <FlowStep.Next>
                                                          <FlowDecision x:Name="__ReferenceID16" Condition="[queueItems.Count &gt; 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <av:Point x:Key="ShapeLocation">551,1274</av:Point>
                                                                <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                                <av:PointCollection x:Key="FalseConnector">630,1317.5 710,1317.5</av:PointCollection>
                                                                <av:PointCollection x:Key="TrueConnector">551,1317.5 491,1317.5</av:PointCollection>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <FlowDecision.True>
                                                              <FlowStep x:Name="__ReferenceID17">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <av:Point x:Key="ShapeLocation">229,1287.5</av:Point>
                                                                    <av:Size x:Key="ShapeSize">262,60</av:Size>
                                                                    <av:PointCollection x:Key="ConnectorLocation">360,1347.5 360,1497 500,1497 500,1527.5</av:PointCollection>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[out_blnDatesExist]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <FlowStep.Next>
                                                                  <x:Reference>__ReferenceID0</x:Reference>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowDecision.True>
                                                            <FlowDecision.False>
                                                              <FlowStep x:Name="__ReferenceID1">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <av:Point x:Key="ShapeLocation">710,1284.5</av:Point>
                                                                    <av:Size x:Key="ShapeSize">200,66</av:Size>
                                                                    <av:PointCollection x:Key="ConnectorLocation">810,1350.5 810,1497 500,1497 500,1527.5</av:PointCollection>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="438,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Should send current dates to queue: " + in_Config("ShouldExtractMastersDate").ToString]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="438,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">No data in the input file(or) config to process</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <Assign sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[out_blnDatesExist]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="438,139" sap2010:WorkflowViewState.IdRef="AddLogFields_17">
                                                                    <ui:AddLogFields.Fields>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">Update_Status_API</InArgument>
                                                                    </ui:AddLogFields.Fields>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </ui:AddLogFields>
                                                                  <TryCatch DisplayName="Try Catch (Calling API Conventional InitAllApplications)" sap:VirtualizedContainerService.HintSize="438,522" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <TryCatch.Try>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="387,295" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProjectComponents\Update_Status_API.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="345,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" UnSafe="False" WorkflowFileName="ProjectComponents\Update_Status_API.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_strAPIBody">[in_Config("PostAPIBody").ToString.Replace("{BotResponse}","No data in the input file(or) config to process").Replace("{BotStatus}","").Replace("{ExceptionScreenshotPath}","")]</InArgument>
                                                                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_blnAPIStatus">[blnAPIStatus]</OutArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                        </ui:InvokeWorkflowFile>
                                                                        <If Condition="[blnAPIStatus]" DisplayName="If (Checking API Status)" sap:VirtualizedContainerService.HintSize="345,51" sap2010:WorkflowViewState.IdRef="If_9">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Convetional data sent to API Succesfully</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                              </ui:InvokeWorkflowFile.Arguments>
                                                                            </ui:InvokeWorkflowFile>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">API failed to sent convetnional data.</InArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                              </ui:InvokeWorkflowFile.Arguments>
                                                                            </ui:InvokeWorkflowFile>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </TryCatch.Try>
                                                                    <TryCatch.Catches>
                                                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                                          <ActivityAction.Argument>
                                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                          </ActivityAction.Argument>
                                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Exception occured while calling API at initiallapplications. Exception Message: " + exception.Message]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                        </ActivityAction>
                                                                      </Catch>
                                                                    </TryCatch.Catches>
                                                                  </TryCatch>
                                                                  <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="438,139" sap2010:WorkflowViewState.IdRef="AddLogFields_18">
                                                                    <ui:AddLogFields.Fields>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="ExecutingXaml">InitAllApplications</InArgument>
                                                                    </ui:AddLogFields.Fields>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </ui:AddLogFields>
                                                                </Sequence>
                                                                <FlowStep.Next>
                                                                  <x:Reference>__ReferenceID0</x:Reference>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowDecision.False>
                                                          </FlowDecision>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowDecision.True>
                                                    <FlowDecision.False>
                                                      <x:Reference>__ReferenceID1</x:Reference>
                                                    </FlowDecision.False>
                                                  </FlowDecision>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowDecision.False>
                                          </FlowDecision>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <x:Reference>__ReferenceID2</x:Reference>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.True>
                            <FlowDecision.False>
                              <FlowStep x:Name="__ReferenceID9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">529.5,664.5</av:Point>
                                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">729.5,690 740.641666666667,690 740.641666666667,449.5 380.641666666667,449.5 380.641666666667,479.5</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Share drive input file(Path: " + strShareDriveInputFilePath + ") not moved into " + in_Config("LocalDriveInputsFolderPath").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID3</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.False>
                          </FlowDecision>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">529.641666666667,497.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">729.641666666667,523 759.641666666667,523 759.641666666667,775 379,775 379,806.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Input file not exists in Share Drive Inputs</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID4</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
    </Flowchart>
  </Sequence>
</Activity>