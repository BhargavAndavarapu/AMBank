<Activity mc:Ignorable="sap sap2010" x:Class="Navigate_Home_Page" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>934,3959</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Navigate_Home_Page_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="58">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Home_Page_Navigation" sap:VirtualizedContainerService.HintSize="797,3894" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="blnMastersPageWindowExits" />
      <Variable x:TypeArguments="x:Boolean" Name="blnFusionBankingTradePage" />
      <Variable x:TypeArguments="x:Boolean" Name="blnHomePage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="755,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
          <Literal x:TypeArguments="x:String">Entered into Home Page Navigation Xaml</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="755,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
          <Literal x:TypeArguments="x:String">Checking masters page exits or not.</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:UiElementExists DisplayName="Element Exists(Masters Page Window)" Exists="[blnMastersPageWindowExits]" sap:VirtualizedContainerService.HintSize="755,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="eeba5b26-abef-4efd-aa4d-00abc2a79358" InformativeScreenshot="218c98d4dbf8ab2aff2a23c1087482fc" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='H?' aaname='Masters' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[blnMastersPageWindowExits]" DisplayName="If(Masters page Exists)" sap:VirtualizedContainerService.HintSize="755,812" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,654" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Masters page window exists.</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Clicking 'Exit' on Masters page window</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click(on Exits Button)" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="48207b59-2bac-4314-a63c-4bea21b7fa46" InformativeScreenshot="2ad76cd03af309c68793a32d86f478c9" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='BUTTON' type='submit' aaname='Exit' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Clicked 'Exit' on Masters page window</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
              <Literal x:TypeArguments="x:String">Masters page window not exists.</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
              <Literal x:TypeArguments="x:String">Info</Literal>
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="755,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
          <Literal x:TypeArguments="x:String">Checking FusionBanking Trade Innovation Application page exits or not.</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:UiElementExists DisplayName="Element Exists(Fusion Banking Tade Page)" Exists="[blnFusionBankingTradePage]" sap:VirtualizedContainerService.HintSize="755,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a606b226-5ed7-434c-a6d7-a7ce6ee6214a" InformativeScreenshot="2b63b50613f6b5f6a7bea6c9982248f1" Selector="&lt;html app='chrome.exe' title='FusionBanking Trade Innovation Application' /&gt;&lt;webctrl tag='H?' aaname='FusionBanking Trade Innovation Application' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[blnFusionBankingTradePage]" DisplayName="If(Fusion Banking Trade page Exists)" sap:VirtualizedContainerService.HintSize="755,812" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,654" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">FusionBanking Trade Innovation Application window exists.</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Clicking 'Exit' on Masters page window</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click(on Exit Button)" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="48207b59-2bac-4314-a63c-4bea21b7fa46" InformativeScreenshot="2ad76cd03af309c68793a32d86f478c9" Selector="&lt;html app='chrome.exe' title='FusionBanking Trade Innovation Application' /&gt;&lt;webctrl tag='BUTTON' type='submit' idx='4' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Clicked 'Exit' on Masters page window</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
              <Literal x:TypeArguments="x:String">FusionBanking Trade Innovation Application window not exists.</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
              <Literal x:TypeArguments="x:String">Info</Literal>
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="755,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
          <Literal x:TypeArguments="x:String">Checking home page exits or not</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:UiElementExists DisplayName="Element Exists(FBTI Home Page)" Exists="[blnHomePage]" sap:VirtualizedContainerService.HintSize="755,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fc41e9c2-b314-4ece-94e2-1a24b811ffbb" InformativeScreenshot="e00b8cf613693cd7aea6be9f89077b9b" Selector="&lt;html app='chrome.exe' title='Fusion Trade Innovation' /&gt;&lt;webctrl tag='H?' aaname='Fusion Trade Innovation Global Application' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[blnHomePage]" DisplayName="If(Checking Home Page Exits or Not)" sap:VirtualizedContainerService.HintSize="755,900" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
              <Literal x:TypeArguments="x:String">Navigated to home page successfully</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
              <Literal x:TypeArguments="x:String">Info</Literal>
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,742" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Failed to navigate home page</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="CHROME" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Killed chrome application successfully</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
                <Literal x:TypeArguments="x:String">Delay for 2 seconds after killing chrome</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
                <Literal x:TypeArguments="x:String">Info</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="755,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LocalDriveLogFilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Now.ToString(in_Config(&quot;CurrentDateLogFormat&quot;).ToString) + &quot; &quot; + Now.ToString(in_Config(&quot;CurrentTimeLogFormat&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">
          <Literal x:TypeArguments="x:String">Exited from Home Page Navigation Xaml</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>