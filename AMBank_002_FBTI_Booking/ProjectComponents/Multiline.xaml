<Activity mc:Ignorable="sap sap2010" x:Class="Multiline" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="out_jsonArrayMultiline" Type="OutArgument(njl:JArray)" />
    <x:Property Name="out_strNormalInterestSpread" Type="OutArgument(x:String)" />
    <x:Property Name="out_strInterestType" Type="OutArgument(x:String)" />
    <x:Property Name="out_strOverdueInterestSpread" Type="OutArgument(x:String)" />
    <x:Property Name="out_strTenor" Type="OutArgument(x:String)" />
    <x:Property Name="out_strAvailableAmount" Type="OutArgument(x:String)" />
    <x:Property Name="out_strFacilityLimitAmount" Type="OutArgument(x:String)" />
    <x:Property Name="out_strTransactionStatus" Type="OutArgument(x:String)" />
    <x:Property Name="out_strCommissionPercentage" Type="OutArgument(x:String)" />
    <x:Property Name="out_strDefaultAccountNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_strFacilityExpiryDate" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,1575</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Multiline_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="86">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Multiline" sap:VirtualizedContainerService.HintSize="1104,1510" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Default="3" Name="intTableRow" />
      <Variable x:TypeArguments="x:Boolean" Name="blnFacilitiesPage" />
      <Variable x:TypeArguments="x:Boolean" Name="blnReferenceNumberPage" />
      <Variable x:TypeArguments="x:Boolean" Name="blnQuestionPage" />
      <Variable x:TypeArguments="x:Boolean" Name="blnSummaryPage" />
      <Variable x:TypeArguments="x:Boolean" Name="blnMastersPage" />
      <Variable x:TypeArguments="x:String" Name="strJson" />
      <Variable x:TypeArguments="x:Boolean" Name="blnFacilitiesSelectionWindow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFacilitiesLineItems" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">510,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">1070.4281139643749</x:Double>
        <x:Double x:Key="Height">1474.5</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">540,77.5 540,126</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID10</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">180.641666666667,607</av:Point>
          <av:Size x:Key="ShapeSize">200,123</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">280.641666666667,730 280.641666666667,926 600,926 600,990.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="If MultiLine was Not Provided in Input File,Extract all multiline items and send." sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Entering into the Multiline Sequence</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_127" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Converting Multiline data table into json(serialization)</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strJson]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(dtFacilitiesLineItems)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Converted Multiline data table into json(serialization)</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Converting selialized json into Deselialized json array</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[out_jsonArrayMultiline]" JsonString="[strJson]" />
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_130" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Converted selialized json into Deselialized json array</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_29" KeyModifiers="None" MouseButton="BTN_LEFT">
          <ui:Click.CursorPosition>
            <ui:CursorPosition Position="Center">
              <ui:CursorPosition.OffsetX>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetX>
              <ui:CursorPosition.OffsetY>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetY>
            </ui:CursorPosition>
          </ui:Click.CursorPosition>
          <ui:Click.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bbd9bff2-5de8-4132-b1e6-c579c236c723" InformativeScreenshot="3afa1e271fba1eecb1a48adbbe6d9f8a" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tag='BUTTON' aaname='Cancel' type='submit' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:Click.Target>
        </ui:Click>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked On cancel Button</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_125" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Facilities Page was opened or not</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:UiElementExists DisplayName="Element Exists Facilities Selection Window" Exists="[blnFacilitiesSelectionWindow]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_21">
          <ui:UiElementExists.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c0c4d9bb-bc47-4d48-ae34-9fac0944083e" InformativeScreenshot="f686fdadd43e802da167f39a5a49de67" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='DIV' innertext='*Facilities - Create - Finance Standalone Log*' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:UiElementExists.Target>
        </ui:UiElementExists>
        <If Condition="[not blnFacilitiesSelectionWindow]" DisplayName="If -  Facilities Selection Window was not Found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,350" sap2010:WorkflowViewState.IdRef="Sequence_57">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_132" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If facility window was not opened again click on the cancel button</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_30" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bbd9bff2-5de8-4132-b1e6-c579c236c723" InformativeScreenshot="3afa1e271fba1eecb1a48adbbe6d9f8a" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tag='BUTTON' aaname='Cancel' type='submit' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_126" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Facilities Page was opened or not</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:UiElementExists DisplayName="Element Exists Facilities Selection Window" Exists="[blnFacilitiesSelectionWindow]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_22">
          <ui:UiElementExists.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c0c4d9bb-bc47-4d48-ae34-9fac0944083e" InformativeScreenshot="f686fdadd43e802da167f39a5a49de67" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='DIV' innertext='*Facilities - Create - Finance Standalone Log*' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:UiElementExists.Target>
        </ui:UiElementExists>
        <If Condition="[not blnFacilitiesSelectionWindow]" DisplayName="If -  Facilities Selection Window was not Found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_59">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_133" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If facility window was not opened again Throw an error like'Facilities window was not Opened'</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <Throw Exception="[new SystemException(&quot;Facilities Selection Window was not found&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_12" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_134" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on the cancel button</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_31" KeyModifiers="None" MouseButton="BTN_LEFT">
          <ui:Click.CursorPosition>
            <ui:CursorPosition Position="Center">
              <ui:CursorPosition.OffsetX>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetX>
              <ui:CursorPosition.OffsetY>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetY>
            </ui:CursorPosition>
          </ui:Click.CursorPosition>
          <ui:Click.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9867cd3c-5077-4500-8cff-9de03242b634" InformativeScreenshot="6fd209022ab24b8dd446203ef5685bdd" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='BUTTON' aaname='Cancel' type='submit' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:Click.Target>
        </ui:Click>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_135" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the cancel button</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <Sequence sap2010:Annotation.AnnotationText="Navigate to the Reference Number Window and Pend the Case.&#xA;" sap:VirtualizedContainerService.HintSize="334,138" sap2010:WorkflowViewState.IdRef="Sequence_80">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Reference number Page was Found or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Reference Number Window" Exists="[blnReferenceNumberPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_23">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a54720b8-b5eb-415a-bf70-03001d3e2c4a" InformativeScreenshot="936244445148463ddea402c7566f9ce5" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnReferenceNumberPage]" DisplayName="If - Reference Number Window was not found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,350" sap2010:WorkflowViewState.IdRef="Sequence_62">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the page again click on the Cancel Button</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_32" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="62275766-9da1-4f46-93ee-0f54f0af739d" InformativeScreenshot="6cd16238f3f442bdbb4601ae8d8902e4" Selector="&lt;webctrl tag='TABLE' idx='7' /&gt;&lt;webctrl tag='BUTTON' aaname='Cancel' type='submit' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_63">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Reference number Page was Found or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Reference Number Window" Exists="[blnReferenceNumberPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_24">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a54720b8-b5eb-415a-bf70-03001d3e2c4a" InformativeScreenshot="936244445148463ddea402c7566f9ce5" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If sap2010:Annotation.AnnotationText="(&quot;Reference Number Window was not Found to Pend the Case&quot;)" Condition="[not blnReferenceNumberPage]" DisplayName="If - Reference Number Window was Not Found" sap:VirtualizedContainerService.HintSize="334,108" sap2010:WorkflowViewState.IdRef="If_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_64">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If Reference Page was not found throw an error like ' Reference Number Window was not Found to Pend the Case'</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Throw Exception="[New SystemException(&quot;Reference Number Window was not Found to Pend the Case&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_13" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on the pend Button</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser Reference Number Window" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="BrowserScope_7" InformativeScreenshot="6fdaa422722c41854c41c3b8b79810f9" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;">
            <ui:BrowserScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_66">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Pend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_33" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c97f3cd6-4e0e-4f89-ab18-bc9e1bff1e27" InformativeScreenshot="e8428bcf3a449104bf451c4d6bb574ea" Selector="&lt;webctrl tag='BUTTON' type='submit' aaname='Pend' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                  </ui:Click>
                </Sequence>
              </ActivityAction>
            </ui:BrowserScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:BrowserScope>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the pend button</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Question Window" Exists="[blnQuestionPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_25">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="605b3625-0737-486b-923b-cfe896322646" InformativeScreenshot="5a133dd46bc62bbdebd3f85e466984ff" Selector="&lt;html app='chrome.exe' title='Question' /&gt;&lt;webctrl tag='H4' aaname='*Question*' idx='1' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnQuestionPage]" DisplayName="If - Question Window was not found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,350" sap2010:WorkflowViewState.IdRef="Sequence_67">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened,If NOT OPEN Again click on the pend button</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Pend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_34" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c97f3cd6-4e0e-4f89-ab18-bc9e1bff1e27" InformativeScreenshot="e8428bcf3a449104bf451c4d6bb574ea" Selector="&lt;webctrl tag='BUTTON' type='submit' aaname='Pend' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Question Window" Exists="[blnQuestionPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_26">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="605b3625-0737-486b-923b-cfe896322646" InformativeScreenshot="5a133dd46bc62bbdebd3f85e466984ff" Selector="&lt;html app='chrome.exe' title='Question' /&gt;&lt;webctrl tag='H4' aaname='*Question*' idx='1' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnQuestionPage]" DisplayName="If- Question Window was not Found to pend the Case" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_69">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not, If not open Throw the Error</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Throw Exception="[New SystemException(&quot;Question Window was not Found to pend the Case&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_14" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_70">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser - QuestionWindow" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="BrowserScope_8" InformativeScreenshot="6bc46be45d8cb0a46fcd5971ddf714cf" Selector="&lt;html app='chrome.exe' title='Question' /&gt;">
            <ui:BrowserScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1098" sap2010:WorkflowViewState.IdRef="Sequence_71">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check the Current User</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check - Current User" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_9">
                    <ui:Check.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="df5ca01a-c006-4284-bdec-7904d946a900" InformativeScreenshot="7fae27c7b77a37e3f098eca4f5a3e32e" Selector="&lt;webctrl tag='SPAN' aaname='Current user - TESTER1' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Check.Target>
                  </ui:Check>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Uncheck the team</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Uncheck" DisplayName="Check - Unckeck Team" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_10">
                    <ui:Check.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80a48dac-d635-4f89-9ae6-aa9e3d631c72" InformativeScreenshot="532516da54375d37123aa084e41778f9" Selector="&lt;webctrl tag='SPAN' aaname='Team - TBSCKL' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Check.Target>
                  </ui:Check>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_105" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on the OK button</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_35" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71c7fa17-95d7-4f23-a0df-20793c3eacf8" InformativeScreenshot="c684de7f4541e798ebf8955853760542" Selector="&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the OK button</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:BrowserScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:BrowserScope>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_107" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Summary Page was Opened or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Summary Page" Exists="[blnSummaryPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_27">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d61a1cb4-7c71-4b5a-914f-39ce0630ec30" InformativeScreenshot="21a0ac81292b69b8dfc99a210303ce96" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='H4' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnSummaryPage]" DisplayName="If - Summary page was not opened" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,642" sap2010:WorkflowViewState.IdRef="Sequence_72">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_108" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the summary page,Again chek the User and Uncheck th team and click on the ok button</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check - Current User" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_11">
                  <ui:Check.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="df5ca01a-c006-4284-bdec-7904d946a900" InformativeScreenshot="7fae27c7b77a37e3f098eca4f5a3e32e" Selector="&lt;webctrl tag='SPAN' aaname='Current user - TESTER1' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Check.Target>
                </ui:Check>
                <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Uncheck" DisplayName="Check - Unckeck Team" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_12">
                  <ui:Check.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80a48dac-d635-4f89-9ae6-aa9e3d631c72" InformativeScreenshot="532516da54375d37123aa084e41778f9" Selector="&lt;webctrl tag='SPAN' aaname='Team - TBSCKL' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Check.Target>
                </ui:Check>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_36" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71c7fa17-95d7-4f23-a0df-20793c3eacf8" InformativeScreenshot="c684de7f4541e798ebf8955853760542" Selector="&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_73">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_109" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Summary Page was Opened or not</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:UiElementExists DisplayName="Element Exists - Summary Page" Exists="[blnSummaryPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_28">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d61a1cb4-7c71-4b5a-914f-39ce0630ec30" InformativeScreenshot="21a0ac81292b69b8dfc99a210303ce96" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='H4' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnSummaryPage]" DisplayName="If - Summary page was not opened" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_74">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_110" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the page throw an error like 'Summar Page was not Opened'</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Throw Exception="[New SystemException(&quot;Summary page was not found&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_15" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_75">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Successfully Pend the Case</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Close Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_37" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e1d33d4-4dbc-4409-8937-edbf341f52f8" InformativeScreenshot="7581253f7a7e9cf4bd0e5596e87713ef" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='BUTTON' type='submit' aaname='Close' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <ui:UiElementExists DisplayName="Element Exists Masters Page" Exists="[blnMastersPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_29">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8a7cead-ef6d-45a8-a461-55a11e85838a" InformativeScreenshot="3df2d61f2e903ca02448ebb1ce1971bd" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='H4' aaname='Masters' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnMastersPage]" DisplayName="If - Masters Page was not Found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_76">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Close Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_38" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e1d33d4-4dbc-4409-8937-edbf341f52f8" InformativeScreenshot="7581253f7a7e9cf4bd0e5596e87713ef" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='BUTTON' type='submit' aaname='Close' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ui:UiElementExists DisplayName="Element Exists Masters Page" Exists="[blnMastersPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_30">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8a7cead-ef6d-45a8-a461-55a11e85838a" InformativeScreenshot="3df2d61f2e903ca02448ebb1ce1971bd" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='H4' aaname='Masters' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[not blnMastersPage]" DisplayName="If - Masters Page was not found" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_31">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_78">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw Exception="[new SystemException(&quot;Masters page was not Found&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_16" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_79">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_131" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Exited into the Multiline Sequence</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">500,990.5</av:Point>
              <av:Size x:Key="ShapeSize">200,139</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">600,1129.5 600,1174.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="200,139" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:String" x:Key="Executing_Xaml">FusionTradeInnovationGlobalApplication_Navigation</InArgument>
            </ui:AddLogFields.Fields>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddLogFields>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">500,1174.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">600,1225.5 600,1285.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FusionTradeInnovationGlobalApplication_Navigation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_91" UnSafe="False" WorkflowFileName="ProjectComponents\FusionTradeInnovationGlobalApplication_Navigation.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">500,1285.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,139</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">970.428113964375,649 970.428113964375,679 704.5,679 704.5,764.51126703637</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the xaml name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (Xaml Name)" sap:VirtualizedContainerService.HintSize="200,139" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                    <ui:AddLogFields.Fields>
                      <InArgument x:TypeArguments="x:String" x:Key="Executing_Xaml">Process</InArgument>
                    </ui:AddLogFields.Fields>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddLogFields>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Check if Multiline was Provided in input file or not." Condition="[String.IsNullOrWhiteSpace(in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString.Trim)]" DisplayName="" sap:VirtualizedContainerService.HintSize="158,144" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">470.641666666667,596.5</av:Point>
          <av:Size x:Key="ShapeSize">158,144</av:Size>
          <av:PointCollection x:Key="TrueConnector">470.641666666667,668.5 380.641666666667,668.5</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">628.641666666667,668.5 728.641666666667,668.5</av:PointCollection>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.False>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">728.641666666667,599.5</av:Point>
              <av:Size x:Key="ShapeSize">200,138</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">828.641666666667,737.5 828.641666666667,787.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="If Which line we selected was Apeared in Input File,then click on the line and extract the Fields in Facilities." sap:VirtualizedContainerService.HintSize="1210,2634" sap2010:WorkflowViewState.IdRef="Sequence_47">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="1168,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If Multiline was present then click on the line item in Facilities</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <If Condition="[String.IsNullOrWhiteSpace(in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="1168,1763" sap2010:WorkflowViewState.IdRef="If_32">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_84">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intTableRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_136" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Clicking on " + intTableRow.ToString + " line item."]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="747,797" sap2010:WorkflowViewState.IdRef="Sequence_85">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString.Trim.Contains(&quot;0&quot;) or in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString&gt;dtFacilitiesLineItems.RowCount.ToString or IsNumeric(in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString)=False]" DisplayName="If(Provided Multiline was Invalid)" sap:VirtualizedContainerService.HintSize="705,453" sap2010:WorkflowViewState.IdRef="If_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_88">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw Exception="[new BusinessRuleException(&quot;Provided Multiline Number&quot;+in_TransactionItem.SpecificContent(&quot;MultilineNumber&quot;).ToString+&quot; was invalid&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_17" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_138" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If Provided Multiline was invalid Throw an error.</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign sap:VirtualizedContainerService.HintSize="705,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intTableRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[CInt(in_TransactionItem.SpecificContent("MultilineNumber"))+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="705,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_137" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Clicking on " + intTableRow.ToString + " line item."]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Line Item" sap:VirtualizedContainerService.HintSize="1168,106" sap2010:WorkflowViewState.IdRef="Click_40" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9331619f-a28a-4627-9b16-90a95e0210e8" InformativeScreenshot="b04624dfe7701fd65c39e10e6a637c33" Selector="[String.Format(&quot;&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tableRow='{0}' tag='SPAN' colName='Status (H/L)' /&gt;&quot;, intTableRow)]">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="1168,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on OK Button</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="797,106" sap2010:WorkflowViewState.IdRef="Click_24" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="76a9fef1-2e50-4a86-8394-c827ba7b4e41" InformativeScreenshot="3373f572e9766526d2aaa07fe482989d" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="797,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on OK Button</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">728.641666666667,787.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,108</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">828.641666666667,895.5 828.641666666667,925.5 600,925.5 600,990.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Click on the line item and extract the Fields." sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_46">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Facilities Page was Found or not</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,441" sap2010:WorkflowViewState.IdRef="Sequence_87">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:UiElementExists DisplayName="Element Exists - Facilities Window" Exists="[blnFacilitiesPage]" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="UiElementExists_9">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="11473bc0-829c-490e-9877-f931ce24efa1" InformativeScreenshot="9f234a953a46b7e1dc711ff5700b007d" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' aaname='Facilities - Create - Finance Standalone Log*' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                      </ui:UiElementExists>
                      <If Condition="[Not blnFacilitiesPage]" DisplayName="If - Facilities Window was not Opened" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,496" sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If Not open Again Click on the line item and click on ok</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - LineItem" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fa9b0f6f-d1fe-4e47-93be-2876d7e67403" InformativeScreenshot="d0700dcb0f8f961b2deb2a7bc896f1c2" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tag='SPAN' colName='Status (H/L)' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="76a9fef1-2e50-4a86-8394-c827ba7b4e41" InformativeScreenshot="3373f572e9766526d2aaa07fe482989d" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Facilities Page was Found or not</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:UiElementExists DisplayName="Element Exists - Facilities Window" Exists="[blnFacilitiesPage]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_10">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="11473bc0-829c-490e-9877-f931ce24efa1" InformativeScreenshot="9f234a953a46b7e1dc711ff5700b007d" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' aaname='Facilities - Create - Finance Standalone Log*' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <If Condition="[Not blnFacilitiesPage]" DisplayName="If - Facilities Window was not Opened" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Again not open then Throw the Error</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <Throw Exception="[New SystemException(&quot;Facilities window was not Opened&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Fetch the Details in Facility Line item." BrowserType="Chrome" DisplayName="Attach Browser - Facilities Window" sap:VirtualizedContainerService.HintSize="434,3811" sap2010:WorkflowViewState.IdRef="BrowserScope_9" InformativeScreenshot="90415a4e65e050677feb9c7a291a14ad" Selector="&lt;html app='chrome.exe' title='Facilities - Create - Finance Standalone Log*' /&gt;">
                  <ui:BrowserScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,3634" sap2010:WorkflowViewState.IdRef="Sequence_81">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_112" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Attach the Facilities page and Extract the Required Fields</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - CommissionPercentage" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_21">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fff3b129-cf64-4ea8-aca8-5dbf210fa525" InformativeScreenshot="d990f15d9b4ce057c117c75897bf4c34" Selector="&lt;webctrl tag='SPAN' aaname='Commission %' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='SPAN' rowName='*Commission %*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strCommissionPercentage]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Commission Percentage of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is: " + out_strCommissionPercentage]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Tenor" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_22">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="735e59ee-2ee6-4d38-a6aa-09625f324fd4" InformativeScreenshot="4464cb0034f6a8b66f5085b4cd7042cf" Selector="&lt;webctrl tag='SPAN' aaname='Tenor' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='SPAN' rowName='*Tenor*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strTenor]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_114" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Tenor of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is : " +out_strTenor]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Normal Interest Spread %" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_23">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9c4d066a-ec59-43da-9ade-3c40c1f8123a" InformativeScreenshot="1b8fff1b072a711e3aae588049dafc1e" Selector="&lt;webctrl tag='SPAN' aaname='Normal Interest spread*' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='SPAN' rowName='*Normal Interest spread*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strNormalInterestSpread]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_115" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage" xml:space="preserve">["Normal Interest Speed percentage of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is :  " +out_strNormalInterestSpread]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Interest Type" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_24">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="00bf0e93-58b0-46d3-b5a4-c73bd38215f3" InformativeScreenshot="1111094c2c98c204f2ed54782077a4d0" Selector="&lt;webctrl tag='SPAN' aaname='Interest Type' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='SPAN' rowName='*Interest Type*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strInterestType]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_116" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Interest Type of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is : " +out_strInterestType]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Default Account Number" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_25">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9809862f-8766-4dad-9a1a-c859c2c6d57e" InformativeScreenshot="3d37c4bf7a83548ed3d045ba569650c7" Selector="&lt;webctrl tag='SPAN' aaname='Default Current Account' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='TD' rowName='*Default Current Account*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strDefaultAccountNumber]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_117" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Default Account Number of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is: " +out_strDefaultAccountNumber]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Transaction Status" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_26">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6a8344f5-4b45-4b8f-af01-2d339aa80639" InformativeScreenshot="ae3d4878705c33ebbecd859b4ea2078a" Selector="&lt;webctrl tag='SPAN' aaname='Status' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='INPUT' type='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strTransactionStatus]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_118" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Transaction Status of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is : " +out_strTransactionStatus]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Available amount" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_27">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d8a8cb98-1ec4-4254-8bf2-32f98e21174d" InformativeScreenshot="bc6f7b698e2b8a026182ffd872bb8787" Selector="&lt;webctrl tag='SPAN' aaname='*Available amount*' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='INPUT' type='text' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strAvailableAmount]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_119" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Available Amount of Customer" +in_TransactionItem.SpecificContent("FinanceTo").ToString +"is: " +out_strAvailableAmount]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Facility Limit Amount" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_28">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a5f3445c-82cc-40c1-b991-5292fa7256ec" InformativeScreenshot="ffb6ebae2af590c9731e59a934948759" Selector="&lt;webctrl tag='SPAN' aaname='Facility limit amount*' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='INPUT' rowName='*Facility limit amount*' type='text' idx='1' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strFacilityLimitAmount]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Facility Limit Amount of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is: " +out_strFacilityLimitAmount]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Facility Expiry Date" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_29">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="92e02d1a-3a81-4d6a-add7-ed04a3833b0c" InformativeScreenshot="ef8adc5c18789431b147d6faca95c965" Selector="&lt;webctrl tag='SPAN' aaname='Facility Expiry Date' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='SPAN' rowName='*Facility Expiry Date*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strFacilityExpiryDate]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Facility Expire Date of Customer " +in_TransactionItem.SpecificContent("FinanceTo").ToString +" is : " +out_strFacilityExpiryDate]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Overdue Interest Spread %" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_30">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d87c5619-4624-43da-a29c-c0d493ef9f34" InformativeScreenshot="2691fed97ac7c8e3355c2a7bbfb75862" Selector="&lt;webctrl tag='SPAN' aaname='Overdue Int Spread*' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='TD' rowName='*Overdue Int Spread*' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[out_strOverdueInterestSpread]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">["Overdue Interest Spread % of Customer" +in_TransactionItem.SpecificContent("FinanceTo").ToString +"is: " +out_strOverdueInterestSpread]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">After Fetching the All details Click on the Cancel Button</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_39" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="62275766-9da1-4f46-93ee-0f54f0af739d" InformativeScreenshot="6cd16238f3f442bdbb4601ae8d8902e4" Selector="&lt;webctrl tag='BUTTON' aaname='Cancel' innertext='Cancel' type='submit' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_124" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the Cancel Button</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </ui:BrowserScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:BrowserScope>
                <Sequence sap2010:Annotation.AnnotationText="Navigate to the Reference Number Window and Pend the Case.&#xA;" sap:VirtualizedContainerService.HintSize="334,138" sap2010:WorkflowViewState.IdRef="Sequence_61">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Reference number Page was Found or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Reference Number Window" Exists="[blnReferenceNumberPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_11">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a54720b8-b5eb-415a-bf70-03001d3e2c4a" InformativeScreenshot="936244445148463ddea402c7566f9ce5" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnReferenceNumberPage]" DisplayName="If - Reference Number Window was not found" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,350" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the page again click on the Cancel Button</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="62275766-9da1-4f46-93ee-0f54f0af739d" InformativeScreenshot="6cd16238f3f442bdbb4601ae8d8902e4" Selector="&lt;webctrl tag='TABLE' idx='7' /&gt;&lt;webctrl tag='BUTTON' aaname='Cancel' type='submit' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Reference number Page was Found or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Reference Number Window" Exists="[blnReferenceNumberPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_12">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a54720b8-b5eb-415a-bf70-03001d3e2c4a" InformativeScreenshot="936244445148463ddea402c7566f9ce5" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;&lt;webctrl tag='H4' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If sap2010:Annotation.AnnotationText="(&quot;Reference Number Window was not Found to Pend the Case&quot;)" Condition="[not blnReferenceNumberPage]" DisplayName="If - Reference Number Window was Not Found" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="If_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If Reference Page was not found throw an error like ' Reference Number Window was not Found to Pend the Case'</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Throw Exception="[New SystemException(&quot;Reference Number Window was not Found to Pend the Case&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on the pend Button</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser Reference Number Window" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="BrowserScope_5" InformativeScreenshot="6fdaa422722c41854c41c3b8b79810f9" Selector="&lt;html app='chrome.exe' title='Create - Finance Standalone Log*' /&gt;">
                    <ui:BrowserScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Pend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_19" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c97f3cd6-4e0e-4f89-ab18-bc9e1bff1e27" InformativeScreenshot="e8428bcf3a449104bf451c4d6bb574ea" Selector="&lt;webctrl tag='BUTTON' type='submit' aaname='Pend' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                        </Sequence>
                      </ActivityAction>
                    </ui:BrowserScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:BrowserScope>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_73" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the pend button</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_74" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Question Window" Exists="[blnQuestionPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_13">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="605b3625-0737-486b-923b-cfe896322646" InformativeScreenshot="5a133dd46bc62bbdebd3f85e466984ff" Selector="&lt;html app='chrome.exe' title='Question' /&gt;&lt;webctrl tag='H4' aaname='*Question*' idx='1' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnQuestionPage]" DisplayName="If - Question Window was not found" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,350" sap2010:WorkflowViewState.IdRef="Sequence_37">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened,If NOT OPEN Again click on the pend button</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Pend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_20" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c97f3cd6-4e0e-4f89-ab18-bc9e1bff1e27" InformativeScreenshot="e8428bcf3a449104bf451c4d6bb574ea" Selector="&lt;webctrl tag='BUTTON' type='submit' aaname='Pend' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_76" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Question Window" Exists="[blnQuestionPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_14">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="605b3625-0737-486b-923b-cfe896322646" InformativeScreenshot="5a133dd46bc62bbdebd3f85e466984ff" Selector="&lt;html app='chrome.exe' title='Question' /&gt;&lt;webctrl tag='H4' aaname='*Question*' idx='1' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnQuestionPage]" DisplayName="If- Question Window was not Found to pend the Case" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_39">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Question Window was opened or not, If not open Throw the Error</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Throw Exception="[New SystemException(&quot;Question Window was not Found to pend the Case&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser - QuestionWindow" sap:VirtualizedContainerService.HintSize="434,1244" sap2010:WorkflowViewState.IdRef="BrowserScope_6" InformativeScreenshot="6bc46be45d8cb0a46fcd5971ddf714cf" Selector="&lt;html app='chrome.exe' title='Question' /&gt;">
                    <ui:BrowserScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1098" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check the Current User</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check - Current User" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_5">
                            <ui:Check.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="df5ca01a-c006-4284-bdec-7904d946a900" InformativeScreenshot="7fae27c7b77a37e3f098eca4f5a3e32e" Selector="&lt;webctrl tag='SPAN' aaname='Current user - TESTER1' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Check.Target>
                          </ui:Check>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Uncheck the team</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Uncheck" DisplayName="Check - Unckeck Team" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_6">
                            <ui:Check.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80a48dac-d635-4f89-9ae6-aa9e3d631c72" InformativeScreenshot="532516da54375d37123aa084e41778f9" Selector="&lt;webctrl tag='SPAN' aaname='Team - TBSCKL' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Check.Target>
                          </ui:Check>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicking on the OK button</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_21" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71c7fa17-95d7-4f23-a0df-20793c3eacf8" InformativeScreenshot="c684de7f4541e798ebf8955853760542" Selector="&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Clicked on the OK button</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </ui:BrowserScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:BrowserScope>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_82" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Summary Page was Opened or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Summary Page" Exists="[blnSummaryPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_15">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d61a1cb4-7c71-4b5a-914f-39ce0630ec30" InformativeScreenshot="21a0ac81292b69b8dfc99a210303ce96" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='H4' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnSummaryPage]" DisplayName="If - Summary page was not opened" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,642" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_83" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the summary page,Again chek the User and Uncheck th team and click on the ok button</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check - Current User" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_7">
                          <ui:Check.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="df5ca01a-c006-4284-bdec-7904d946a900" InformativeScreenshot="7fae27c7b77a37e3f098eca4f5a3e32e" Selector="&lt;webctrl tag='SPAN' aaname='Current user - TESTER1' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Check.Target>
                        </ui:Check>
                        <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Uncheck" DisplayName="Check - Unckeck Team" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_8">
                          <ui:Check.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80a48dac-d635-4f89-9ae6-aa9e3d631c72" InformativeScreenshot="532516da54375d37123aa084e41778f9" Selector="&lt;webctrl tag='SPAN' aaname='Team - TBSCKL' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='LABEL' idx='2' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Check.Target>
                        </ui:Check>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Ok" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_22" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71c7fa17-95d7-4f23-a0df-20793c3eacf8" InformativeScreenshot="c684de7f4541e798ebf8955853760542" Selector="&lt;webctrl tag='BUTTON' aaname='OK' type='submit' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Summary Page was Opened or not</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists DisplayName="Element Exists - Summary Page" Exists="[blnSummaryPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_16">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d61a1cb4-7c71-4b5a-914f-39ce0630ec30" InformativeScreenshot="21a0ac81292b69b8dfc99a210303ce96" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='H4' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnSummaryPage]" DisplayName="If - Summary page was not opened" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_44">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If not open the page throw an error like 'Summar Page was not Opened'</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Error</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Throw Exception="[New SystemException(&quot;Summary page was not found&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_45">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Successfully Pend the Case</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Close Button" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Click_25" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e1d33d4-4dbc-4409-8937-edbf341f52f8" InformativeScreenshot="7581253f7a7e9cf4bd0e5596e87713ef" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='BUTTON' type='submit' aaname='Close' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Element Exists Masters Page" Exists="[blnMastersPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_17">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8a7cead-ef6d-45a8-a461-55a11e85838a" InformativeScreenshot="3df2d61f2e903ca02448ebb1ce1971bd" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='H4' aaname='Masters' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnMastersPage]" DisplayName="If - Masters Page was not Found" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_49">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Close Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_26" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7e1d33d4-4dbc-4409-8937-edbf341f52f8" InformativeScreenshot="7581253f7a7e9cf4bd0e5596e87713ef" Selector="&lt;html app='chrome.exe' title='Summary - Finance Standalone*' /&gt;&lt;webctrl tag='BUTTON' type='submit' aaname='Close' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:UiElementExists DisplayName="Element Exists Masters Page" Exists="[blnMastersPage]" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="UiElementExists_18">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8a7cead-ef6d-45a8-a461-55a11e85838a" InformativeScreenshot="3df2d61f2e903ca02448ebb1ce1971bd" Selector="&lt;html app='chrome.exe' title='Masters' /&gt;&lt;webctrl tag='H4' aaname='Masters' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[not blnMastersPage]" DisplayName="If - Masters Page was not found" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_51">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw Exception="[new SystemException(&quot;Masters page was not Found&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
              <FlowStep.Next>
                <x:Reference>__ReferenceID1</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.False>
    </FlowDecision>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">220.641666666667,424.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320.641666666667,475.5 320.641666666667,552.04 549.641666666667,552.04 549.641666666667,596.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Check if Which line we selected was mentioned in Multiline Field in Input file</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <FlowStep.Next>
        <x:Reference>__ReferenceID2</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID5" Condition="[dtFacilitiesLineItems.RowCount&gt;1]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2" True="{x:Reference __ReferenceID3}" False="{x:Reference __ReferenceID4}">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">500.641666666667,406.5</av:Point>
          <av:Size x:Key="ShapeSize">79,87</av:Size>
          <av:PointCollection x:Key="TrueConnector">500.641666666667,450 420.641666666667,450</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">579.641666666667,450 828.641666666667,450 828.641666666667,599.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </FlowDecision>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">440,294.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">540,345.5 540,375.5 540.141666666667,375.5 540.141666666667,406.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[String.IsNullOrEmpty(dtFacilitiesLineItems(0)(&quot;Status (H/L)&quot;).tostring)]" DisplayName="If - No Line Generated in Credit Facilities for Customer " sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Sequence - Throw the Exception" sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">If No Line Generated in Credit Facilities for Customer Throw an Error</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Throw Exception="[New BusinessRuleException(&quot; No Line Generated in Credit Facilities for Customer : '&quot; +in_TransactionItem.SpecificContent(&quot;FinanceTo&quot;).ToString + &quot;'.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <FlowStep.Next>
        <x:Reference>__ReferenceID5</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">440,126</av:Point>
          <av:Size x:Key="ShapeSize">200,108</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">540,234 540,294.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Store the Facilities Line items Data into Data Table)" DisplayName="Sequence - (Store the Facilities Line items Data into Data Table)" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="ProjectComponents\Logs.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogFilePath">[in_Config("LocalDriveLogFilePath").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrDateTime">[Now.ToString(in_Config("CurrentDateLogFormat").ToString) + " " + Now.ToString(in_Config("CurrentTimeLogFormat").ToString)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogMessage">Extract the Facility Line Items</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_StrLogLevel">Info</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <uix:NApplicationCard WebDriverMode="{x:Null}" AttachMode="ByInstance" DisplayName="Use Application/Browser" sap:VirtualizedContainerService.HintSize="434,466" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="b847753c-0bcb-48bf-91b3-96c3689d3690" Version="V2">
          <uix:NApplicationCard.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,250" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uix:NExtractData AppendResults="False" ContinueOnError="True" DataTable="[dtFacilitiesLineItems]" DisplayName="Extract Table Data" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='High Level Facility Code' ReferenceIdx='0' Name='High Level Facility Code'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Identifier' ReferenceIdx='1' Name='Identifier'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='High Level Limit(CCY/AMT)' ReferenceIdx='2' Name='High Level Limit(CCY/AMT)'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Status (H/L)' ReferenceIdx='3' Name='Status (H/L)'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Low Level Facility Code' ReferenceIdx='4' Name='Low Level Facility Code'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Tenor' ReferenceIdx='5' Name='Tenor'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Low Level Limit(CCY/AMT)' ReferenceIdx='6' Name='Low Level Limit(CCY/AMT)'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Exposure Amount' ReferenceIdx='7' Name='Exposure Amount'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Reserved Amount' ReferenceIdx='8' Name='Reserved Amount'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Available Amount' ReferenceIdx='9' Name='Available Amount'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest'&gt;&lt;column name='High Level Facility Code' attr='text' /&gt;&lt;column name='Identifier' attr='text' /&gt;&lt;column name='High Level Limit(CCY/AMT)' attr='text' /&gt;&lt;column name='Status (H/L)' attr='text' /&gt;&lt;column name='Low Level Facility Code' attr='text' /&gt;&lt;column name='Tenor' attr='text' /&gt;&lt;column name='Low Level Limit(CCY/AMT)' attr='text' /&gt;&lt;column name='Exposure Amount' attr='text' /&gt;&lt;column name='Reserved Amount' attr='text' /&gt;&lt;column name='Available Amount' attr='text' /&gt;&lt;/extract-table&gt;" sap:VirtualizedContainerService.HintSize="334,156" sap2010:WorkflowViewState.IdRef="NExtractData_1" LimitExtractionTo="Rows" MaximumResults="0" Version="V1">
                  <uix:NExtractData.Target>
                    <uix:TargetAnchorable DesignTimeRectangle="207, 559, 1132, 69" FriendlyName="'High Level'" FullSelectorArgument="&lt;webctrl parentid='FacilityPostingsBrowserWP_ResultsToggle_ctlArgTitle_section' tag='TABLE' /&gt;&lt;webctrl tableRow='2' tag='TABLE' /&gt;" Guid="8301406a-fd24-4906-a1bf-35422317fbc1" InformativeScreenshot="b56fef570cc4ff5f628525fb5416d24b.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Facility selection' /&gt;" SearchSteps="Selector" Visibility="Interactive" />
                  </uix:NExtractData.Target>
                </uix:NExtractData>
              </Sequence>
            </ActivityAction>
          </uix:NApplicationCard.Body>
          <uix:NApplicationCard.TargetApp>
            <uix:TargetApp Area="0, 0, 0, 0" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAbxSURBVFhHpZZtTFvnFcf9pWuypg3tmjVrGmLeEoMBG2PaJBDb2CkvyQJpvlXtFqRpmrSXT5s67a3pl0nTptXkhdAklEsCbZdG3VsrVe3AhhBCs3ZDi5ZAo21OA5hAOztNmrXhXj9n//M8j415SUe7I/30P+fh+vzPufcasC03YgF3zkzQ0zITrDLAyPshb3ImVEXTQS/NBDn3RmeClcZ0qHIvX6s/9v/HVIPbfjVU1com2kxcra2k6VovqBQM14sIVBpTAbddt/nsoTb2htlUGgWUWcYQ9dWAR0wFOPcgV8r1VMCj8AOfZ59uufzgyWES00a6sUfm8ww0cTZiuPZViLi/Qp1xrohNbV7m3ZiurXChUSzbIIO/QjDKUBlpE4r73BmdhE5ucys4V/X/HoI3h1EsvYFSjTaa9Kmm8W3aSDXPMJGmxkWTNS4BBaoer3ZhCMfSQ/Azh1FMGWU1z5ipxnIA1hq3kDUbaENlJHMxLmul49XljFDqii35LZnwucMZE4XI3khvo41Uzg1lzc1l7aIrOGO0KV3ZupAycWVLWVjbqnC/tNve/h3/nAmboqk2I7mNNpn57jfoxss9ZMYnKR3i5rskZl4la2QXWecqGcGaYn3LQ5JzHpx5BM5kTcNZ70PlS3uMbUYzjYUq1Fb6dknFxDKvr6YbJ3u0JVE8Kah/bBaYdGkqpU8xzNSLZL3jJ/OtChgxbgzhxjDQYbeqoajVXXAbu3M8LzxGzL4fBjO3io1Z39tSRuN1W+nWpTFp8JeYSd8yPqKqZ65R1T4N8qbwdYqOzsprxM0xst6ugZmLDZUOc85aDi3HEOVJGsG74H5hd4u7ZzdVANb+Jq80ZfCsBOv133TLxkein5AXhhmezso1R3ENh4h3K7PhMk1pljJOMXumpMXm7m42ALm6m4S7p1k8+Ys6ury5lN7b7BTMxGP1siFvV/l0UuLROse1eefv4C5xpC7sFdZZJ5lnS8hagtRwiWFzdTdHXScwwIkmTTO9useLIZwUe8RJN177nWy289kPqeJnyTlglNF0rutvdt6QnxFTJ4R5thhm2TgwlINS0NRQ8Yit/HhTsvz4LkpT1rWLth9spL/7yij2cIm4dWmUxuIWudF8MYnbkKTJJF7MTyZguBGGmiEJMSZInS1K2MqMr8JUImSu659/u5piVcWCN4lcnCXXTxNLA7P5dYLKoRH9QlpDRWSeKSSLQW4NaZV1gbCVdu6kUpiWGjuF1C6lj7Q30vkap2zSd/EWlaHpQtgoW7PP+zA0h3WmAEb5wjoDhgowTD7O5uABks7OHUKxk6BAqvjeUz5hxidoMpGi0p/8+zMxiscmProAkzwyB/Ogdgxhl7XKN3CdsJU8v+OvJR2NpNhBqGXuZH2+UQz2n5SbtHRcJycaO38MWD+Ful9dk59JTZ+CGRvlCnMwlyzJBrBecG4Oro/aHB0NRvGxRpqjQQ7gONYgOP/6a0/JZn/+1yyVwLwYKP1A5nP13HkvHhmH9fYWMk+vBw/B9CHBqnOyWE+vM2yOow0tIGPIyPpovQCsdPy8+ioe6rtJjh99QA6YSF0Izg/1/kdee228E4brYLYO2z6I/EGYK6y0Dqzba7MbgZziI/XJTUfqKRsH69E6wXi79ojR9/8hG//pwi0K/jJJm2CYzdeOfUjn/qlevInEu5QYLCFz4CuatTBdK9JqnX5A5hTNUX+WNz1X37rpuTraqJH5kTqRroHwGntE1/nfSgOOi5OWHIaZwEuaDr6m849bsN1aGD+QwWLt/7JUa2CNsPrXGNKcw9HeYN/Y/igxRVrTeRaisH27CPQ8Sa+MvkEX9R3hGL9+lYy/vUJP/P4H5O/wwWiNYkBr//0ytwbuFzIH2H7+f0ZFbaHWosPbKU1hG+ujxKaFhyWkNCT4ZxldwKk/FMHkS8pU6n3YVipZyFlTA/ct/k/ZHg7kFBwOxQraVOOCQyEqBKx8JpXP2ubX2Tze9TDM7hVm9F4YAlaAM605wormxLTl4sAQ9oK2YCzdMP9gkApA/qGgkHCu66XOL7+JZxxdjQHuAathuBqGUNSa2KJbvzB4iPwDtTHZ9EAt5R2sFQznafJY8XNWmR8I0ve7y8mM3I1N71EKrOgqmK4SnM9G7ob5ik83TwcPkbe/NgbIfiAg8vYHpMochvb9Kk9T076VLr+B5xxZxabQu+ZhRe6Kfbxc8+zAIM/YW2F+W/wYxi86Xs4ns28ljL4oMSMrBNdmBPStDGe+758n+G7khv3GhrCfNrT6Re6zPsF5btgn6+q2zTBZobmTzF4QuTNp9q5s/fj1z7H17QKD5Kz/9bYWDNCFAaLQJKCTp/A7PXJHItX7hZFU7wpjtu+OluVvbLP9F5lmWAkTeM7rAAAAAElFTkSuQmCC" InformativeScreenshot="26ecf7d416b7479166f92556b25411cc.png" Selector="&lt;html app='chrome.exe' title='Facility selection' /&gt;" Url="[if(in_TransactionItem.SpecificContent(&quot;Entity&quot;).ToString.ToLower.Trim=in_Config(&quot;ConventionalEntityName&quot;).ToString.ToLower.Trim,in_Config(&quot;ConventionalLineItemURL&quot;).ToString.Trim,in_Config(&quot;IslamicLineItemURL&quot;).ToString.Trim)]" />
          </uix:NApplicationCard.TargetApp>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </uix:NApplicationCard>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID6</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>